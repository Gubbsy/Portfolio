<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-09T09:47:27+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Adam Lee</title><subtitle>Feel free to contact me with regards to any questions, queries or opportunities.</subtitle><entry><title type="html">Habitat - A Full Stack Mobile App</title><link href="http://localhost:4000/project/2020/01/12/habitat.html" rel="alternate" type="text/html" title="Habitat - A Full Stack Mobile App" /><published>2020-01-12T00:00:00+00:00</published><updated>2020-01-12T00:00:00+00:00</updated><id>http://localhost:4000/project/2020/01/12/habitat</id><content type="html" xml:base="http://localhost:4000/project/2020/01/12/habitat.html">&lt;p&gt;&lt;img src=&quot;/assets/images/habitat.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Habitat is a mobile application born out of collective experiences of living in shared rental accommodation. It looks to solve issues surrounding property management and maintenance - providing a single platform for information and communications between landlords and tenants.&lt;/p&gt;

&lt;p&gt;The application was developed as a team amongst 3 University colleagues, where I assumed the role of Project Lead and Frontend Developer.&lt;/p&gt;

&lt;h1 id=&quot;skills-developed&quot;&gt;Skills Developed&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Contructing a native mobile technology stack.&lt;/li&gt;
  &lt;li&gt;Designing and implementing an abstract API layer for Frontend/Server communications.&lt;/li&gt;
  &lt;li&gt;Managing, Analysing, Iterating and Deligatigating development task within a small agile scrum team. (Using Trello and Planaway)&lt;/li&gt;
  &lt;li&gt;Utilising dependency injections to provide manageable, testable and reusable frontend services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;overall-outcomes&quot;&gt;Overall Outcomes&lt;/h1&gt;
&lt;p&gt;This project provided me with the opportunity to collaborate and develop a technology stack that builds to native mobile devices. The frontend of the application was constructed using Angular 8 and Ionic Cordova - allowing cross-platform building with access to OS-specific functionality. The backend was written using ASP.NetCore and made use of Entity Framework to craft a NoSQL database layer for a rapid development environment.&lt;/p&gt;

&lt;p&gt;Assuming the role of Project Lead was quite daunting a first, however, I quickly found my feet amongst the team and through daily stand-up meetings, weekly retrospectives and hands-on task delegation, as a team, we were able to deliver a working prototype in a short span of only 12 weeks. 
Under the role of Project Lead, I was also responsible to extracting user-stories from potential user interviews and broke each user story down into development task for us to complete - using tools such as Trello and Github Cards to organise and manage tasks.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://habitat.ebrisoft.com/index.html&quot;&gt;Habitat Release Page&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/Ebrisoft/Frontend&quot;&gt;Frontend Repo&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/Ebrisoft/Backend&quot;&gt;Server Repo&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">3D Model &amp;amp; Shader Tester</title><link href="http://localhost:4000/project/2020/01/06/3d-model-loader.html" rel="alternate" type="text/html" title="3D Model &amp; Shader Tester" /><published>2020-01-06T00:00:00+00:00</published><updated>2020-01-06T00:00:00+00:00</updated><id>http://localhost:4000/project/2020/01/06/3d-model-loader</id><content type="html" xml:base="http://localhost:4000/project/2020/01/06/3d-model-loader.html">&lt;p&gt;&lt;img src=&quot;/assets/images/shader-tester.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This project was my first experience with an unmanaged language such as C++. I created a consol driven application that could dynamically read and render both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.obj&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.dae&lt;/code&gt; files while also providing the ability to dynamically swap the vertex and fragment shaders applied to the rendered model.&lt;/p&gt;

&lt;h1 id=&quot;skills-developed&quot;&gt;Skills Developed&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Application of an unmanaged language - C++.&lt;/li&gt;
  &lt;li&gt;OpenGL shader development.&lt;/li&gt;
  &lt;li&gt;Application of OpenGL and graphics libraries to render 3D models.&lt;/li&gt;
  &lt;li&gt;Algorithm development and refinement for faster file parsing with large data sets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;overall-outcomes&quot;&gt;Overall Outcomes&lt;/h1&gt;
&lt;p&gt;As previously mentioned this project was my first dive into C++ and didn’t come without its challenges. Working with an unmanaged language for the first time created a steep learning curve that was only multiplied by the complexities of OpenGL. However, with time I gained an appreciation for the control and possibilities allowed by an unmanaged language, especially with regards to memory management.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Gubbsy/ShaderTester&quot;&gt;Model Loader Repository&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Kinder - Rate My Kitties</title><link href="http://localhost:4000/project/2020/01/02/kinder.html" rel="alternate" type="text/html" title="Kinder - Rate My Kitties" /><published>2020-01-02T00:00:00+00:00</published><updated>2020-01-02T00:00:00+00:00</updated><id>http://localhost:4000/project/2020/01/02/kinder</id><content type="html" xml:base="http://localhost:4000/project/2020/01/02/kinder.html">&lt;p&gt;&lt;img src=&quot;/assets/images/kinder.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kinder was a fun little project I created during university where users could visit a site that presents them with cat images they can rate using emojis. Each vote they cast adds to cat’s overall cuteness rating, with a live-updated feed of the Top 5 cats presented at the bottom of the page. The frontend of the application s built using the Angular 8 framework, while the backend is constructed using express with using an MVC repository pattern with a supporting MongoDB DB layer.&lt;/p&gt;

&lt;h1 id=&quot;skills-developed&quot;&gt;Skills Developed&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Independent Full-stack architecture design.&lt;/li&gt;
  &lt;li&gt;Use of WebSockets, Cookies and JSON web-tokens.&lt;/li&gt;
  &lt;li&gt;Web API development using Express.&lt;/li&gt;
  &lt;li&gt;Use of MongoDB in a document repository context.&lt;/li&gt;
  &lt;li&gt;Applying a Test Driven Development (TDD) Strategy and leveraging Dependency Injection for code testability.&lt;/li&gt;
  &lt;li&gt;Implementing a CI pipeline, ensuring high-quality code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;overall-outcomes&quot;&gt;Overall Outcomes&lt;/h1&gt;
&lt;p&gt;This project helped to clarify some core concepts within Web API development and apply industry-standard technologies (WebSockets/Cookies/JSON web-tokens) I was yet to experience. The project also forced a necessity to consider the wider architecture of the applications and consider service interactions on a greater scale, I eventually settled on an MVC Repository pattern as it decoupled business logic within the business logic from the database access layer.&lt;/p&gt;

&lt;p&gt;This was also my first project were I applied TDD approach to which I saw great benefit. From the get-go to consider how my application would be constructed and designed and consider how I would ensure each element of my code was testable. I implemented an Azure CI pipeline to build and produce test reports, certifying my application could build and run outside of my development environment.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Gubbsy/SOFT355-Kinder&quot;&gt;Kinder Repository&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">3D Model Experiences</title><link href="http://localhost:4000/project/2018/04/18/3d-modeling.html" rel="alternate" type="text/html" title="3D Model Experiences" /><published>2018-04-18T00:00:00+01:00</published><updated>2018-04-18T00:00:00+01:00</updated><id>http://localhost:4000/project/2018/04/18/3d-modeling</id><content type="html" xml:base="http://localhost:4000/project/2018/04/18/3d-modeling.html">&lt;p&gt;&lt;img src=&quot;/assets/images/animated-door.gif&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/the-factory-gif.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During my second year at university, I had my first taste of designing, texturing and implementing 3D models within a Unity scene. The experience was a welcomed change from the heavy programming modules that were running in tangent with this project and during this time I created several experiences to experiment with modelling techniques and scene interaction and lighting.&lt;/p&gt;

&lt;h1 id=&quot;skills-developed&quot;&gt;Skills Developed&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;C# Unity Scripting&lt;/li&gt;
  &lt;li&gt;Unity Lighting Model&lt;/li&gt;
  &lt;li&gt;3DS Max Modeling&lt;/li&gt;
  &lt;li&gt;UV Mapping and Texturing&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Hell in a Cell - Top Down Shooter</title><link href="http://localhost:4000/project/2017/02/14/hell-in-a-cell.html" rel="alternate" type="text/html" title="Hell in a Cell - Top Down Shooter" /><published>2017-02-14T00:00:00+00:00</published><updated>2017-02-14T00:00:00+00:00</updated><id>http://localhost:4000/project/2017/02/14/hell-in-a-cell</id><content type="html" xml:base="http://localhost:4000/project/2017/02/14/hell-in-a-cell.html">&lt;p&gt;&lt;img src=&quot;/assets/images/hell-in-a-cell.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hell in a Cell was the first Unity game I ever created. Inspired by classic gun runner games such as Doom, this top-down shooter is fast-paced and action intensive. I created all the models, animations and lighting models myself with the sprite tool magic voxel. The development introduced me to Object Orientated game design and gave me an insight into software development within a game’s context.&lt;/p&gt;

&lt;h1 id=&quot;skills-developed&quot;&gt;Skills Developed&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;C# Unity Development&lt;/li&gt;
  &lt;li&gt;Games Systems Architecture&lt;/li&gt;
  &lt;li&gt;User Experince Design.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://sourgamesdev.itch.io/hell-in-a-cell&quot;&gt;Itch.io release&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>